import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { {{configurationClass}}, {{configurationParams}} } from './{{configurationFile}}';
import { FormBuilderTypeSafe } from 'angular-typesafe-reactive-forms-helper';

{{#models}}
import { {{{typeName}}}{{#useAlias}} as {{{qualifiedName}}}{{/useAlias}}Schema } from './models';
{{/models}}



{{#services}}import { {{typeName}} } from './services/{{fileName}}';
{{/services}}
import Ajv from 'ajv';
import addFormats from 'ajv-formats';
const ajv = new Ajv({ allErrors: true, $data: true });
addFormats(ajv);

{{#models}}
  ajv.addSchema({{{typeName}}}{{#useAlias}} as {{{qualifiedName}}}{{/useAlias}}Schema, '#/components/schemas/{{{typeName}}}{{#useAlias}} as {{{qualifiedName}}}{{/useAlias}}')
{{/models}}

/**
 * Module that provides all services and configuration.
 */
@NgModule({
  imports: [HttpClientModule],
  exports: [],
  declarations: [],
  providers: [FormBuilderTypeSafe,
{provide:Ajv, useValue: ajv},
{{#services}}    {{typeName}},
{{/services}}
    {{configurationClass}}
  ],
})
export class {{moduleClass}} {
  static forRoot(params: {{configurationParams}}): ModuleWithProviders<{{moduleClass}}> {
    return {
      ngModule: {{moduleClass}},
      providers: [
        {
          provide: {{configurationClass}},
          useValue: params
        }
      ]
    }
  }

  constructor(
    @Optional() @SkipSelf() parentModule: {{moduleClass}},
    @Optional() http: HttpClient
  ) {
    if (parentModule) {
      throw new Error('{{moduleClass}} is already loaded. Import in your base AppModule only.');
    }
    if (!http) {
      throw new Error('You need to import the HttpClientModule in your AppModule! \n' +
      'See also https://github.com/angular/angular/issues/20575');
    }
  }
}
