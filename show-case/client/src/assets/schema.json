{
  "swagger": "2.0",
  "info": {
    "title": "show-case",
    "version": "1.0.0",
    "description": "some examples of using Strongly framework."
  },
  "paths": {
    "/admin/users": {
      "get": {
        "parameters": [],
        "tags": [
          "admin"
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/admin/add-user": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User",
              "type": "object"
            }
          }
        ],
        "tags": [
          "admin"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "password": {
                  "type": "string",
                  "notEmptyString": true,
                  "minLength": 6
                },
                "email": {
                  "format": "email",
                  "type": "string",
                  "notEmptyString": true
                }
              },
              "type": "object",
              "required": [
                "password",
                "email"
              ]
            }
          }
        ],
        "tags": [
          "auth"
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "parameters": [],
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/get-user-authenticated": {
      "get": {
        "parameters": [],
        "tags": [
          "auth"
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/show-case/getUser/:id": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "show-case"
        ],
        "description": "\nid is required in the param and should by number",
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "notEmptyString": true
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      }
    },
    "/show-case/getUsers2/:id": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "show-case"
        ],
        "description": "\nthis is the same as previous one, with convenient way",
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "notEmptyString": true
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      }
    },
    "/show-case/login": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "password": {
                  "type": "string",
                  "notEmptyString": true,
                  "minLength": 6
                },
                "email": {
                  "format": "email",
                  "type": "string",
                  "notEmptyString": true
                }
              },
              "type": "object",
              "required": [
                "password",
                "email"
              ]
            }
          }
        ],
        "tags": [
          "show-case"
        ],
        "description": "\nyou can add validation as you want",
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "notEmptyString": true
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      }
    },
    "/show-case/save-user": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDetails",
              "type": "object"
            }
          }
        ],
        "tags": [
          "show-case"
        ],
        "description": "\nyou can add validation on the class,  name should be ta least 10 letters",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          }
        }
      }
    },
    "/show-case/save-contact": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "notEmptyString": true,
                  "maxLength": 10
                },
                "id": {
                  "type": "number"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "tags": [
          "show-case"
        ],
        "description": "\n or send your schema validation",
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "notEmptyString": true
                },
                "id": {
                  "type": "number"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string",
          "notEmptyString": true
        },
        "email": {
          "type": "string",
          "notEmptyString": true
        },
        "fName": {
          "type": "string",
          "notEmptyString": true
        },
        "lName": {
          "type": "string",
          "notEmptyString": true
        },
        "role": {
          "type": "string",
          "enum": [
            "admin",
            "user"
          ]
        },
        "_id": {
          "type": "string",
          "notEmptyString": true
        }
      },
      "required": [
        "phone",
        "email",
        "fName",
        "lName",
        "role"
      ]
    },
    "Contact": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "notEmptyString": true
        },
        "id": {
          "type": "number"
        }
      },
      "required": [
        "id"
      ]
    },
    "UserDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "notEmptyString": true,
          "minLength": 10
        },
        "somePrimitiveArray": {
          "type": "array",
          "items": {
            "type": "string",
            "notEmptyString": true
          }
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      },
      "required": [
        "name",
        "contacts"
      ]
    }
  },
  "tags": [
    {
      "name": "admin"
    },
    {
      "name": "auth",
      "description": "User authentication stuff"
    },
    {
      "name": "show-case"
    }
  ]
}
