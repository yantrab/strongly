import { NgModule, ModuleWithProviders } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';
import { ApiConfiguration, ApiConfigurationInterface } from './api-configuration';
import * as services from './services';
import { FormBuilderTypeSafe } from 'angular-typesafe-reactive-forms-helper';
import { ReactiveFormsModule } from '@angular/forms';

import Ajv from 'ajv';
import addFormats from 'ajv-formats';
const ajv = new Ajv({ allErrors: true });
addFormats(ajv);
ajv.addKeyword('notEmptyString', {
  validate: (schema1: any, data: any) => {
    return data.trim().length > 0;
  }
} as any);

/**
 * Provider for all Api services, plus ApiConfiguration
 */
@NgModule({
  imports: [HttpClientModule, ReactiveFormsModule],
  exports: [HttpClientModule],
  declarations: [],
  providers: [ApiConfiguration, ...Object.values(services), { provide: Ajv, useValue: ajv }, FormBuilderTypeSafe]
})
export class ApiModule {
  static forRoot(customParams: ApiConfigurationInterface): ModuleWithProviders<ApiModule> {
    return {
      ngModule: ApiModule,
      providers: [
        {
          provide: ApiConfiguration,
          useValue: { rootUrl: customParams.rootUrl }
        }

      ]
    };
  }
}
